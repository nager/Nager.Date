@using Nager.Date.Website.Context.Entities;
@inject SignInManager<RegisteredConsumer> signInManager
@{
  var hasExternalLogins = (await signInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
  <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
  <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
  <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
  <li class="nav-item"><a class="nav-link @ManageNavPages.PhoneNumberNavClass(ViewContext)" id="phone-number" asp-page="./PhoneNumber">Phone Number</a></li>
  @if (hasExternalLogins)
  {
    <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
  }
  <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
  <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
  @if (User.IsInRole("Admin"))
  {
    <li><hr /></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.AllUserNavClass(ViewContext)" id="all-users" asp-page="./AllUsers">View All Users</a></li>
  }
</ul>

