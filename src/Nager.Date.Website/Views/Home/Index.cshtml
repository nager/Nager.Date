@{
  ViewData["Title"] = "Worldwide Public Holidays";
  ViewData["Description"] = "Here you can find public holidays and long weekends for more than 100 countries";
}

<div class="header">
  <div style="max-width:380px; margin-top:230px; margin-left:20px; margin-right:20px; position:absolute">
    <img class="img-fluid" width="650" height="176" src="~/images/logo.png" title="nager.date - Worldwide public holiday" />
  </div>
</div>

<div id="app" class="container-fluid" v-cloak>

  <div class="row">

    <div class="col-md-12 col-xl-6">

      <section class="card mt-4 mb-4">
        <header class="card-header border-0"><i class="fas fa-globe-africa"></i> Countries</header>

        <div>
          <div class="input-group mb-3 ml-3">
            <div class="input-group-prepend">
              <div class="input-group-text"><i class="fas fa-search"></i></div>
            </div>
            <input v-model="search" type="text" class="form-control p-3" placeholder="Search" autofocus>
          </div>
        </div>

        <div v-if="availableCountries">
          <div class="table-responsive">
            <div class="pre-scrollable">
              <table class="table" v-if="filteredCountries.length > 0">
                <tr v-for="item in filteredCountries">
                  <td class="pl-4"><a :href="`/PublicHoliday/Country/${item.key}`">{{ item.value }} ({{ item.key }})</a></td>
                </tr>
              </table>
              <div v-else class="p-3">
                No country found
              </div>
            </div>
          </div>
        </div>
      </section>

      <section class="d-none d-sm-block">
        <div class="card mt-4">
          <header class="card-header border-0" v-if="countryInfo"><i class="far fa-calendar-check"></i> Next Public Holidays Worldwide in the next 7 days</header>
          <div v-if="publicHolidaysWorldwide">
            <table class="table">
              <thead>
                <tr>
                  <th>In x Days</th>
                  <th>Date</th>
                  <th>Name</th>
                  <th>Country</th>
                </tr>
              </thead>
              <tbody>
                <tr v-for="item in publicHolidaysWorldwide">
                  <td>{{ inDays(item.date) }}</td>
                  <td>{{ shortLocalDate(item.date) }}</td>
                  <td>{{ item.name }}</td>
                  <td><a :href="`/PublicHoliday/Country/${item.countryCode}`">{{ item.countryCode }}</a></td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </section>

    </div>

    <div class="col-md-12 col-xl-6">

      <section class="card mt-4">
        <header class="card-header border-0" v-if="countryInfo"><i class="far fa-calendar-check"></i> Next Public Holidays in <a :href="'/PublicHoliday/Country/' + countryInfo.countryCode">{{ countryInfo.commonName }}</a></header>
        <div v-if="publicHolidays">
          <table class="table">
            <thead>
              <tr>
                <th>Date</th>
                <th>Local Name</th>
                <th>English Name</th>
              </tr>
            </thead>
            <tbody>
              <tr v-for="item in publicHolidays">
                <td>{{ longLocalDate(item.date) }}</td>
                <td>{{ item.localName }}</td>
                <td>{{ item.name }}</td>
              </tr>
            </tbody>
          </table>
        </div>
      </section>

    </div>
  </div>
</div>

@section scripts {

  <script type="text/javascript">
    // moving from axios to fetch because we can instruct fetch to return cookies we can't read with javascript
    const App = {
      data() {
        return {
          countryInfo: null,
          availableCountries: null,
          publicHolidays: null,
          publicHolidaysWorldwide: null,
          search: null
        }
      },
      computed: {
        filteredCountries: function () {
          if (this.search === null) {
            return this.availableCountries;
          }

          let search = this.search.toLowerCase();
          let filteredItems = this.availableCountries.filter(o => o.value.toLowerCase().includes(search) || o.key.toLowerCase().includes(search));

          return filteredItems;
        }
      },
      mounted() {
        this.getAvailableCountries();
        this.getCountryInfo();
        this.getNextPublicHolidaysWorldwide();
      },
      created() {
        var locale = window.navigator.userLanguage || window.navigator.language;
        moment.locale(locale);
      },
      methods: {
        inDays: function (date) {
          let fromNow = moment(date).fromNow();

          // ensure the date is displayed with today and yesterday
          return moment(date).calendar(null, {
            // when the date is closer, specify custom values
            sameDay: '[Today]',
            nextDay: '[Tomorrow]',
            nextWeek: function () {
              return "[" + fromNow + "]";
            },
            sameElse: function () {
              return "[" + fromNow + "]";
            }
          });
        },
        shortLocalDate: function (date) {
          return moment(date).format('L');
        },
        longLocalDate: function (date) {
          return moment(date).format('dd L');
        },
        getAvailableCountries: function () {
          getNagerApi('/Api/v2/AvailableCountries')
            .then(data => {
              this.availableCountries = data;
            });
        },
        getCountryInfo: function () {
          getNagerApi('/Api/v2/CountryInfo')
            .then(data => {
              this.countryInfo = data
              this.getNextPublicHolidays();
            });
        },
        getNextPublicHolidays: function () {
          getNagerApi('/Api/v2/NextPublicHolidays/' + this.countryInfo.countryCode)
            .then(data => {
              this.publicHolidays = data;
            });
        },
        getNextPublicHolidaysWorldwide: function () {
          getNagerApi('/Api/v2/NextPublicHolidaysWorldwide')
            .then(data => {
              this.publicHolidaysWorldwide = data;
            });
        }
      }
    };

    Vue.createApp(App).mount('#app');

  </script>
}
