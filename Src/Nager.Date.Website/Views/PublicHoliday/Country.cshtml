@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@model Nager.Date.WebsiteCore.Models.PublicHolidayInfo
@{
    ViewData["Title"] = $"{Model.Country} - Public Holidays in {Model.Country} in {Model.Year}";
    ViewData["Description"] = $"Overview of celebrated public holidays in {Model.Country} during {Model.Year}. With detailed information in which federal state the holiday is celebrated.";
}

<header class="public-holiday-country-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12 col-xl-2 text-center">
                <img src="~/images/circle-flags/flags/@(Model.CountryCode.ToLower()).svg" class="mt-2 mt-xl-5" alt="@Model.Country" title="@Model.Country" width="64" height="64" />
            </div>
            <div class="col-12 col-xl-10">
                <h1 class="display-4 mt-2 mt-xl-5">Public Holidays in @Model.Country in @Model.Year</h1>
                <div class="mt-2 d-none d-sm-block h6 text-center">A list of public holidays observed in @Model.Country</div>
            </div>
        </div>
    </div>
</header>

<div class="container-fluid" id="app" v-cloak>

    <div class="row">
        <div class="col-12 col-xl-8 mt-4">
            <section class="card">
                <header class="card-header border-0"><i class="fas fa-globe-africa"></i> Public holidays</header>
                <div class="table-responsive" v-if="publicHolidays">
                    <table class="table" v-if="publicHolidays.length > 0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th class="d-none d-sm-table-cell">Local name</th>
                                <th class="d-none d-sm-table-cell">Name</th>
                                <th class="d-sm-none">Name</th>
                                <th class="d-none d-lg-table-cell">Global</th>
                                <th class="d-none d-lg-table-cell" style="width: 30%" v-if="showColumnCounty">Counties</th>
                                <th>Type</th>
                                <th class="d-none">Country</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="publicHoliday in publicHolidays" itemscope itemtype="http://schema.org/Event">
                                <td itemprop="startDate" :content="publicHoliday.date | iso8601Date">{{ longLocalDate(publicHoliday.date) }}</td>
                                <td itemprop="name" class="d-none d-sm-table-cell">{{ publicHoliday.localName }}</td>
                                <td itemprop="alternateName" class="d-none d-sm-table-cell">{{ publicHoliday.name }}</td>
                                <td class="d-sm-none"><strong>{{ publicHoliday.localName }}</strong><br />{{ publicHoliday.name }}</td>
                                <td class="d-none d-lg-table-cell">
                                    <i class="fas fa-check" v-if="publicHoliday.global"></i>
                                    <i class="fas fa-ban" v-if="!publicHoliday.global"></i>
                                </td>
                                <td class="d-none d-lg-table-cell" v-if="showColumnCounty">
                                    <template v-if="!publicHoliday.global" v-for="county in publicHoliday.counties">
                                        <span class="badge badge-light">{{ county }}</span>
                                    </template>
                                </td>
                                <td>
                                    {{ publicHoliday.type }}
                                </td>
                                <td itemprop="location" itemscope itemtype="http://schema.org/Place" class="d-none">
                                    <span itemprop="address">{{ publicHoliday.countryCode }}</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div v-else class="p-3">
                        No data for this country available.
                    </div>
                </div>
                <div v-else class="p-3">
                    <div class="spinner-grow text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </section>
            <div class="mt-2">
                <nav class="mt-3 d-none d-sm-block">
                    <ul class="pagination justify-content-center ml-2">
                        @for (var i = Model.Year - 5; i < Model.Year + 6; i++)
                        {
                            <li class="page-item">
                                <a href="/PublicHoliday/Country/@(Model.CountryCode)/@(i)" class="page-link">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
        <div class="col-12 col-xl-4 mt-4">
            <section class="card">
                <header class="card-header border-0"><i class="fas fa-calendar-alt"></i> Long weekends</header>
                <div class="table-responsive" v-if="longWeekends">
                    <div v-for="longWeekend in longWeekends" v-if="longWeekends.length > 0">
                        <table class="longweekend">
                            <tr>
                                <td class="day-count">
                                    <strong>{{ longWeekend.dayCount }}</strong>
                                    <small>days</small>
                                </td>
                                <td class="d-none d-sm-table-cell info-start">{{ monthNameWithDay(longWeekend.startDate) }}</td>
                                <td v-for="day in getDates(longWeekend.startDate, longWeekend.endDate)" class="day">
                                    <span class="d-block" :style="isSunday(day) ? 'color:red; font-weight:bold;' : ''">{{ onlyDayName(day) }}</span>
                                    <strong>{{ onlyDayNumber(day) }}</strong><br />
                                    <span class="d-sm-none d-block">{{ day | onlyMonthName }}</span>
                                </td>
                                <td class="d-none d-sm-table-cell info-end">{{ monthNameWithDay(longWeekend.endDate) }}</td>
                            </tr>
                        </table>
                    </div>
                    <div v-else class="p-3">
                        No data for this country available.
                    </div>
                </div>
                <div v-else class="p-3">
                    <div class="spinner-grow text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </section>

            <section class="card mt-4" v-if="countryInfo && countryInfo.borders.length > 0">
                <header class="card-header border-0">Border countries</header>
                <div class="mb-2">
                    <div v-for="border in countryInfo.borders" class="d-inline-block text-center ml-2 mb-2" style="width:140px;">
                        <a :href="`/PublicHoliday/Country/${border.countryCode}`" class="d-block">
                            <img :src="`/images/circle-flags/flags/${border.countryCode}.svg`" width="60" height="60" :alt="border.countryCode" :title="border.countryCode" />
                        </a>
                        <a :href="`/PublicHoliday/Country/${border.countryCode}`">{{ border.commonName }}</a>
                    </div>
                </div>
            </section>

            <section class="card mt-4" v-if="publicHolidays && publicHolidays.length > 0">
                <header class="card-header border-0"><i class="fas fa-file-download"></i> Downloads</header>
                <div>
                    <ul class="list-group">
                        <li class="list-group-item">
                            <i class="fas fa-file-csv"></i> <a href="/PublicHoliday/Country/@(Model.CountryCode)/@(Model.Year)/CSV">CSV</a>
                        </li>
                    </ul>
                </div>
            </section>
        </div>
    </div>

</div>

@section scripts {

<script type="text/javascript">

    const App = {
        data() {
            return {
                countryInfo: null,
                longWeekends: null,
                publicHolidays: null
            }
        },
        mounted() {
            this.getPublicHolidays();
            this.getCountryInfo();
            this.getLongWeekends();
        },
        created() {
            var locale = window.navigator.userLanguage || window.navigator.language;
            moment.locale(locale);
        },
        computed: {
            showColumnCounty: function () {
                if (this.publicHolidays === null) {
                    return false;
                }
                let count = this.publicHolidays.filter(o => !o.global);
                return count.length !== 0;
            }
        },
        methods: {
            shortLocalDate: function (date) {
                return moment(date).format('L');
            },
            longLocalDate: function (date) {
                return moment(date).format('dd L');
            },
            onlyDayName: function (date) {
                return moment(date).format('dd');
            },
            onlyDayNumber: function (date) {
                return moment(date).format('DD');
            },
            monthNameWithDay: function (date) {
                return moment(date).format('DD. MMM');
            },
            onlyMonthName: function (date) {
                return moment(date).format('MMM');
            },
            iso8601Date: function (date) {
                return moment(date).toISOString();
            },
            getCountryInfo: function () {
                axios.get('/Api/v2/CountryInfo?countryCode=@(Model.CountryCode)')
                    .then(response => {
                        this.countryInfo = response.data
                    })
                    .catch(error => {
                        console.log(error)
                    });
            },
            getLongWeekends: function () {
                axios.get('/Api/v2/LongWeekend/@(Model.Year)/@(Model.CountryCode)')
                    .then(response => {
                        this.longWeekends = response.data
                    })
                    .catch(error => {
                        console.log(error)
                    });
            },
            getPublicHolidays: function () {
                axios.get('/Api/v2/PublicHolidays/@(Model.Year)/@(Model.CountryCode)')
                    .then(response => {
                        this.publicHolidays = response.data
                    })
                    .catch(error => {
                        this.publicHolidays = [];
                        console.log(error)
                    });
            },
            getDates: function (startDate, stopDate) {
                var dateArray = [];
                var currentDate = moment(startDate);
                var stopDate = moment(stopDate);
                while (currentDate <= stopDate) {
                    dateArray.push(moment(currentDate).format('YYYY-MM-DD'))
                    currentDate = moment(currentDate).add(1, 'days');
                }
                return dateArray;
            },
            isSunday: function (date) {
                var currentDate = moment(date);
                if (currentDate.day() === 0) {
                    return true;
                }
                return false;
            }
        }
    };

    Vue.createApp(App).mount('#app');

</script>
}
